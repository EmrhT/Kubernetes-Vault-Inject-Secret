apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql-svc
  replicas: 1 # by default is 1
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-inject-status: 'update'
        vault.hashicorp.com/role: 'flask-mysql-app'
        vault.hashicorp.com/agent-inject-secret-db-password: 'flask-mysql/data/database/config'
        vault.hashicorp.com/agent-inject-template-db-password: |
          {{- with secret "flask-mysql/data/database/config" -}}
          {{ .Data.data.password }}
          {{- end -}}
      labels:
        app: mysql # has to match .spec.selector.matchLabels
    spec:
      serviceAccountName: flask-mysql-app
      terminationGracePeriodSeconds: 10
      containers:
      - name: mysql
        image: mariadb:10-focal
        livenessProbe:
          exec:
            command: 
            - /bin/sh
            - -c 
            - mysqladmin -u root -p`cat /vault/secrets/db-password` ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: 
            - /bin/sh
            - -c 
            - mysql -u root -p`cat /vault/secrets/db-password` -e "select 1"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        envFrom:
        - configMapRef: 
            name: mysql-cm
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-pvc
          mountPath: /var/lib/mysql
      volumes:
        - name: mysql-pvc
          persistentVolumeClaim:
            claimName: mysql-pvc
